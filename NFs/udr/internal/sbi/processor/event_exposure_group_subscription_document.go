/*
 * Nudr_DataRepository API OpenAPI file
 *
 * Unified Data Repository Service
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package processor

import (
	"net/http"

	"github.com/gin-gonic/gin"

	"github.com/free5gc/openapi/models"
	udr_context "github.com/free5gc/udr/internal/context"
	"github.com/free5gc/udr/internal/util"
)

func (p *Processor) RemoveEeGroupSubscriptionsProcedure(c *gin.Context, ueGroupId string, subsId string) {
	udrSelf := udr_context.GetSelf()
	value, ok := udrSelf.UEGroupCollection.Load(ueGroupId)
	if !ok {
		pd := util.ProblemDetailsNotFound("USER_NOT_FOUND")
		c.JSON(int(pd.Status), pd)
		return
	}

	UEGroupSubsData := value.(*udr_context.UEGroupSubsData)
	_, ok = UEGroupSubsData.EeSubscriptions[subsId]

	if !ok {
		pd := util.ProblemDetailsNotFound("SUBSCRIPTION_NOT_FOUND")
		c.JSON(int(pd.Status), pd)
		return
	}
	delete(UEGroupSubsData.EeSubscriptions, subsId)

	c.Status(http.StatusNoContent)
}

func (p *Processor) UpdateEeGroupSubscriptionsProcedure(c *gin.Context, ueGroupId string, subsId string,
	EeSubscription models.EeSubscription,
) {
	udrSelf := udr_context.GetSelf()
	value, ok := udrSelf.UEGroupCollection.Load(ueGroupId)
	if !ok {
		pd := util.ProblemDetailsNotFound("USER_NOT_FOUND")
		c.JSON(int(pd.Status), pd)
		return
	}

	UEGroupSubsData := value.(*udr_context.UEGroupSubsData)
	_, ok = UEGroupSubsData.EeSubscriptions[subsId]

	if !ok {
		pd := util.ProblemDetailsNotFound("SUBSCRIPTION_NOT_FOUND")
		c.JSON(int(pd.Status), pd)
		return
	}
	UEGroupSubsData.EeSubscriptions[subsId] = &EeSubscription

	c.Status(http.StatusNoContent)
}
